# This file contains details of all the columns in SOCAT-formatted files.
#
# The fields are:
#
# Field:
#    The name of the SOCAT field.
#
# Required:
#    Whether or not this field is required. It may be part of a Required Group
#    (see below).
#
#    Note that changing the flags on the date fields has no effect: they are
#    always treated as Required.
#
# RequiredGroup:
#    For certain fields, at least one of a group of fields must be populated,
#    but not all need to be. Such grouped fields are given their group name
#    here.
#
# Source
#    Where the for the field should be retrieved from. One of:
#        D - From the input data
#        M - From the input metadata
#        C - Must be calculated
#        N - This column is calculated later by another program. All values are set to NaN here.
#
# Metadata_Name
#    If the Source (above) is M, this contains the name of the metadata
#    field where the field value will be found.
#
# Calc_Class
#    If the Source (above) is C, this gives the name of the class that
#    contains the method for calculating this field value. The class must
#    be in the package socat.sanitychecker.data.calculate, and implement the
#    interface socat.sanitychecker.data.calculate.DataCalculator.
#
# Numeric
#    Does the column contain a numeric value?
#
# Range_Min
#    For numeric fields, specifies the lower limit of possible values
#
# Range_Max
#    For numeric fields, specifies the upper limit of possible values
#
# Flag
#    Indicates whether or not this field has a flag associated with it.
#        N - No flag
#        F - Flags are set for this field only
#        C - Flags cascade, so that setting a flag on this field also
#            sets the flags on fields with X flags (see below)
#        X - Flags set on a field with a C code will cause this
#            field's flag to be set. Setting a flag on this field
#            will also set the flag on any other X field.
#
#
#       NOTE: The date fields are *always* treated as cascade flags,
#             regardless of what is set in this file.
#
# Missing_Flag
#    The flag to be assigned to the field if the value is missing. Can be
#    one of:
#        G - Good (i.e. we don't mind if it's missing)
#        Q - Questionable
#        B - Bad
#
#     These are translated to WOCE flag values in the final output file
#
# Range_Flag
#    The flag to set if a numeric field value falls outside the specified
#    range. Values are the same as for the Missing_Flag above.

#Field,Required,RequiredGroup,Source,Metadata_Name,Calc_Class,Numeric,Range_Min,Range_Max,Flag,MissingFlag,RangeFlag
longitude,Y,,D,,,Y,-180,180,C,B,B
latitude,Y,,D,,,Y,-90,90,C,B,B
depth,N,,D,,,Y,0,20,F,Q,Q
temp,Y,,D,,,Y,-5,40,F,Q,Q
temperature_equi,Y,,D,,,Y,-5,35,F,Q,Q
pressure_atm,Y,,D,,,Y,800,1100,F,Q,Q
pressure_equi,Y,,D,,,Y,800,1100,F,Q,Q
sal,Y,,D,,,Y,0,45,F,Q,Q
xCO2water_equ_dry,Y,CO2Water,D,,,Y,250,450,F,B,Q
xCO2water_sst_dry,Y,CO2Water,D,,,Y,250,450,F,B,Q
pCO2water_equ_wet,Y,CO2Water,D,,,Y,250,450,F,B,Q
pCO2water_sst_wet,Y,CO2Water,D,,,Y,250,450,F,B,Q
fCO2water_equ_wet,Y,CO2Water,D,,,Y,250,450,F,B,Q
fCO2water_sst_wet,Y,CO2Water,D,,,Y,250,450,F,B,Q
